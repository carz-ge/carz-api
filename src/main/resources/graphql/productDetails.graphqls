type ProductDetailsCarPrice {
    order: ID
    carType: CarType!
    price: Int
}

type ProductPackage {
    id: ID!
    productId: ID!
    name: LingualString!
    description: LingualString
    pricesForCarTypes: [ProductDetailsCarPrice!]
    availableServices: [LingualString!]
    notAvailableServices: [LingualString]
    currency: Currency
    averageDurationMinutes: Int
}

input ProductDetailsCarPriceInput {
    carType: CarType!
    price: Int!
}

input ProductDetailsInput {
    productId: ID!
    name: LingualStringInput!
    description: LingualStringInput
    pricesForCarTypes: [ProductDetailsCarPriceInput!]!
    availableServices: [LingualStringInput!]
    notAvailableServices: [LingualStringInput]
    currency: Currency
    averageDurationMinutes: Int
}

extend type Query {
    listProductDetailsByProductId(productId: ID!): [ProductPackage!]!
}

extend type Mutation {
    createProductDetails(input: ProductDetailsInput!): ProductPackage!
    updateProductDetails(productDetailsId: ID!,
                         input: ProductDetailsInput!): ProductPackage!
    removeProductDetails(productDetailsId: ID!): Boolean!
}
