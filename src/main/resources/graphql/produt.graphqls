type Product {
    id: ID!
    name: LingualString!
    providerId: ID!
    categoryId: ID!
    description: LingualString
    location: Location
    mainImage: String!
    images: [String!]
    tags: [String!]
}

input ProductInput {
    name: LingualStringInput!
    categoryId: ID!
    providerId: ID!
    description: LingualStringInput
    location: LocationInput
    mainImage: String!
    images: [String!]
    tags: [String!]
}

input ProductFilterInput {
    categoryId: ID
    carType: CarType
    date: String
    time: String
}

extend type Query {
    listProducts: [Product]!
    listProductByCategoryId(categoryId: ID!): [Product]!
    listProductByProviderId(providerId: ID!): [Product]!

    searchProducts(filter: ProductFilterInput!): [Product]!
}

extend type Mutation {
    createProduct(input: ProductInput!): Product!
    updateProduct(productId: ID!, input: ProductInput!): Product!
    removeProduct(productId: ID!): Boolean!
}

